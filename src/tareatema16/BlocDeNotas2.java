/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tareatema16;


import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.JFileChooser;


/**
 *
 * @author Juan
 */
public class BlocDeNotas2 extends javax.swing.JFrame{

    /**
     * Creates new form BlocDeNotas2
     */
    public BlocDeNotas2() {
        initComponents();    
        jTextAreaEspacio.setLineWrap(true);

    }
    
    private int contarCaracteres(){
        int caracteres = 0;
        
        String texto = jTextAreaEspacio.getText();
        for (int i = 0; i < texto.length(); i++) {
            if (texto.charAt(i) != ' ') {
                caracteres++;
            }
            
        }
        return caracteres;
    }
    
    private int contarLineas(){
        int lineas = 0;
        String texto = jTextAreaEspacio.getText();
        for (int i = 0; i < texto.length(); i++) {
            if (texto.charAt(i) != '.') {
                lineas++;
            }
            
        }
        return lineas;
    }
    
    private int contarPalabras(){
        int palabras = 0;
        
        String texto = jTextAreaEspacio.getText();
        for (int i = 0; i < texto.length(); i++) {
            if (texto.charAt(i) != ' ') {
                palabras++;
            }
        }
        return palabras;
    }
    
    private int contarVocales(){
        int vocalesInt = 0;
        char[] vocales = {'a', 'e', 'i', 'o', 'u'};
        
        String texto = jTextAreaEspacio.getText();
        for (int i = 0; i < texto.length(); i++) {
            char letra = texto.charAt(i);
            for (char vocal : vocales) {
                if (Character.toLowerCase(letra) == vocal) {
                    vocalesInt++;
                    break;
                }
            }
        }
        return vocalesInt;
    }
    
    private int contarConsonantes(){
        int consonantes = 0;
        char[] vocales = {'a', 'e', 'i', 'o', 'u'};
        
        String texto = jTextAreaEspacio.getText();
        for (int i = 0; i < texto.length(); i++) {
            char letra = texto.charAt(i);
            for (char vocal : vocales) {
                if (Character.toLowerCase(letra) != vocal) {
                    consonantes++;
                    break;
                }
            }
        }
        return consonantes;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaEspacio = new javax.swing.JTextArea();
        jLabelCaracteres = new javax.swing.JLabel();
        jLabelLineas = new javax.swing.JLabel();
        jLabelPalabras = new javax.swing.JLabel();
        jLabelVocales = new javax.swing.JLabel();
        jLabelConsonantes = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemCargar = new javax.swing.JMenuItem();
        jMenuItemGuardar = new javax.swing.JMenuItem();
        jMenuContar = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextAreaEspacio.setColumns(20);
        jTextAreaEspacio.setRows(5);
        jScrollPane1.setViewportView(jTextAreaEspacio);

        jLabelCaracteres.setText("Caracteres: ");

        jLabelLineas.setText("Lineas: ");

        jLabelPalabras.setText("Palabras:");

        jLabelVocales.setText("Vocales:");

        jLabelConsonantes.setText("Consonantes:");

        jMenu1.setText("File");

        jMenuItemCargar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemCargar.setText("Cargar archivo");
        jMenuItemCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCargarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemCargar);

        jMenuItemGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemGuardar.setText("Guardar archivo");
        jMenuItemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemGuardar);

        jMenuBar1.add(jMenu1);

        jMenuContar.setText("Contar");
        jMenuContar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuContarActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Contar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuContar.add(jMenuItem1);

        jMenuBar1.add(jMenuContar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCaracteres, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelLineas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPalabras, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelVocales, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelConsonantes, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCaracteres)
                    .addComponent(jLabelLineas)
                    .addComponent(jLabelPalabras)
                    .addComponent(jLabelVocales)
                    .addComponent(jLabelConsonantes)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCargarActionPerformed
        //Creamos un objeto FileChooser para abrir la ventana emergente de explorar archivos para abrirlos y seteamos el titulo
        JFileChooser filechooser = new JFileChooser();
        filechooser.setDialogTitle("Cargar Archivo");
        
        int resultado = filechooser.showOpenDialog(null);
        String ruta = "";
        
        if(resultado == JFileChooser.APPROVE_OPTION){
            ruta = filechooser.getSelectedFile().getAbsolutePath();
        }
                
        //Leemos el fichero a continuacion:
        FileReader fr = null;
        try{
            fr = new FileReader(ruta);
            
            int data = fr.read();
            StringBuilder lineas = new StringBuilder();
            
            //Ahora recorremos el archivo hasta que no tenga m√°s lineas.
            while(data != 1){
                lineas.append((char) data);
                jTextAreaEspacio.setText(lineas.toString());;

                System.out.println(lineas);
        }
        }catch(Exception e){
        
        }
        
    }//GEN-LAST:event_jMenuItemCargarActionPerformed

    private void jMenuItemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemGuardarActionPerformed

    private void jMenuContarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuContarActionPerformed
        
    }//GEN-LAST:event_jMenuContarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jLabelCaracteres.setText("Caracteres:" + contarCaracteres());
        jLabelVocales.setText("Vocales:" + contarVocales());
        jLabelPalabras.setText("Palabras:" + contarPalabras());
        jLabelLineas.setText("Lineas:" + contarLineas());
        jLabelConsonantes.setText("Consonantes:" + contarConsonantes());
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlocDeNotas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlocDeNotas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlocDeNotas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlocDeNotas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlocDeNotas2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelCaracteres;
    private javax.swing.JLabel jLabelConsonantes;
    private javax.swing.JLabel jLabelLineas;
    private javax.swing.JLabel jLabelPalabras;
    private javax.swing.JLabel jLabelVocales;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuContar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemCargar;
    private javax.swing.JMenuItem jMenuItemGuardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaEspacio;
    // End of variables declaration//GEN-END:variables
    
    
}
